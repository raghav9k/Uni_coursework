
assignment4.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000032  00800200  00000cca  00000d5e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000cca  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000001c  00800232  00800232  00000d90  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000d90  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000dec  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000c0  00000000  00000000  00000e2c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000185f  00000000  00000000  00000eec  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000efa  00000000  00000000  0000274b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000091d  00000000  00000000  00003645  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000278  00000000  00000000  00003f64  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000006e8  00000000  00000000  000041dc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000b13  00000000  00000000  000048c4  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000a0  00000000  00000000  000053d7  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	8e c0       	rjmp	.+284    	; 0x122 <__bad_interrupt>
   6:	00 00       	nop
   8:	8c c0       	rjmp	.+280    	; 0x122 <__bad_interrupt>
   a:	00 00       	nop
   c:	8a c0       	rjmp	.+276    	; 0x122 <__bad_interrupt>
   e:	00 00       	nop
  10:	88 c0       	rjmp	.+272    	; 0x122 <__bad_interrupt>
  12:	00 00       	nop
  14:	86 c0       	rjmp	.+268    	; 0x122 <__bad_interrupt>
  16:	00 00       	nop
  18:	84 c0       	rjmp	.+264    	; 0x122 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	82 c0       	rjmp	.+260    	; 0x122 <__bad_interrupt>
  1e:	00 00       	nop
  20:	80 c0       	rjmp	.+256    	; 0x122 <__bad_interrupt>
  22:	00 00       	nop
  24:	7e c0       	rjmp	.+252    	; 0x122 <__bad_interrupt>
  26:	00 00       	nop
  28:	7c c0       	rjmp	.+248    	; 0x122 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	7a c0       	rjmp	.+244    	; 0x122 <__bad_interrupt>
  2e:	00 00       	nop
  30:	78 c0       	rjmp	.+240    	; 0x122 <__bad_interrupt>
  32:	00 00       	nop
  34:	76 c0       	rjmp	.+236    	; 0x122 <__bad_interrupt>
  36:	00 00       	nop
  38:	74 c0       	rjmp	.+232    	; 0x122 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	72 c0       	rjmp	.+228    	; 0x122 <__bad_interrupt>
  3e:	00 00       	nop
  40:	70 c0       	rjmp	.+224    	; 0x122 <__bad_interrupt>
  42:	00 00       	nop
  44:	6e c0       	rjmp	.+220    	; 0x122 <__bad_interrupt>
  46:	00 00       	nop
  48:	6c c0       	rjmp	.+216    	; 0x122 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	6a c0       	rjmp	.+212    	; 0x122 <__bad_interrupt>
  4e:	00 00       	nop
  50:	68 c0       	rjmp	.+208    	; 0x122 <__bad_interrupt>
  52:	00 00       	nop
  54:	b0 c1       	rjmp	.+864    	; 0x3b6 <__vector_21>
  56:	00 00       	nop
  58:	64 c0       	rjmp	.+200    	; 0x122 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	62 c0       	rjmp	.+196    	; 0x122 <__bad_interrupt>
  5e:	00 00       	nop
  60:	60 c0       	rjmp	.+192    	; 0x122 <__bad_interrupt>
  62:	00 00       	nop
  64:	5e c0       	rjmp	.+188    	; 0x122 <__bad_interrupt>
  66:	00 00       	nop
  68:	5c c0       	rjmp	.+184    	; 0x122 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	5a c0       	rjmp	.+180    	; 0x122 <__bad_interrupt>
  6e:	00 00       	nop
  70:	58 c0       	rjmp	.+176    	; 0x122 <__bad_interrupt>
  72:	00 00       	nop
  74:	56 c0       	rjmp	.+172    	; 0x122 <__bad_interrupt>
  76:	00 00       	nop
  78:	54 c0       	rjmp	.+168    	; 0x122 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	52 c0       	rjmp	.+164    	; 0x122 <__bad_interrupt>
  7e:	00 00       	nop
  80:	50 c0       	rjmp	.+160    	; 0x122 <__bad_interrupt>
  82:	00 00       	nop
  84:	4e c0       	rjmp	.+156    	; 0x122 <__bad_interrupt>
  86:	00 00       	nop
  88:	4c c0       	rjmp	.+152    	; 0x122 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	4a c0       	rjmp	.+148    	; 0x122 <__bad_interrupt>
  8e:	00 00       	nop
  90:	48 c0       	rjmp	.+144    	; 0x122 <__bad_interrupt>
  92:	00 00       	nop
  94:	46 c0       	rjmp	.+140    	; 0x122 <__bad_interrupt>
  96:	00 00       	nop
  98:	44 c0       	rjmp	.+136    	; 0x122 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	42 c0       	rjmp	.+132    	; 0x122 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	40 c0       	rjmp	.+128    	; 0x122 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	3e c0       	rjmp	.+124    	; 0x122 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	3c c0       	rjmp	.+120    	; 0x122 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	3a c0       	rjmp	.+116    	; 0x122 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	38 c0       	rjmp	.+112    	; 0x122 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	36 c0       	rjmp	.+108    	; 0x122 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	34 c0       	rjmp	.+104    	; 0x122 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	32 c0       	rjmp	.+100    	; 0x122 <__bad_interrupt>
  be:	00 00       	nop
  c0:	30 c0       	rjmp	.+96     	; 0x122 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	2e c0       	rjmp	.+92     	; 0x122 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	2c c0       	rjmp	.+88     	; 0x122 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	2a c0       	rjmp	.+84     	; 0x122 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	28 c0       	rjmp	.+80     	; 0x122 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	26 c0       	rjmp	.+76     	; 0x122 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	24 c0       	rjmp	.+72     	; 0x122 <__bad_interrupt>
  da:	00 00       	nop
  dc:	22 c0       	rjmp	.+68     	; 0x122 <__bad_interrupt>
  de:	00 00       	nop
  e0:	20 c0       	rjmp	.+64     	; 0x122 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
  f4:	12 e0       	ldi	r17, 0x02	; 2
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b2 e0       	ldi	r27, 0x02	; 2
  fa:	ea ec       	ldi	r30, 0xCA	; 202
  fc:	fc e0       	ldi	r31, 0x0C	; 12
  fe:	00 e0       	ldi	r16, 0x00	; 0
 100:	0b bf       	out	0x3b, r16	; 59
 102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
 104:	07 90       	elpm	r0, Z+
 106:	0d 92       	st	X+, r0
 108:	a2 33       	cpi	r26, 0x32	; 50
 10a:	b1 07       	cpc	r27, r17
 10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
 10e:	22 e0       	ldi	r18, 0x02	; 2
 110:	a2 e3       	ldi	r26, 0x32	; 50
 112:	b2 e0       	ldi	r27, 0x02	; 2
 114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
 116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
 118:	ae 34       	cpi	r26, 0x4E	; 78
 11a:	b2 07       	cpc	r27, r18
 11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
 11e:	c9 d2       	rcall	.+1426   	; 0x6b2 <main>
 120:	d2 c5       	rjmp	.+2980   	; 0xcc6 <_exit>

00000122 <__bad_interrupt>:
 122:	6e cf       	rjmp	.-292    	; 0x0 <__vectors>

00000124 <lcd_nibble>:

void lcd_blank( uint8_t len )                   // blank n digits
{
  while( len-- )
    lcd_putchar( ' ' );
}
 124:	e2 e0       	ldi	r30, 0x02	; 2
 126:	f1 e0       	ldi	r31, 0x01	; 1
 128:	90 81       	ld	r25, Z
 12a:	9f 7e       	andi	r25, 0xEF	; 239
 12c:	90 83       	st	Z, r25
 12e:	88 23       	and	r24, r24
 130:	1c f4       	brge	.+6      	; 0x138 <lcd_nibble+0x14>
 132:	90 81       	ld	r25, Z
 134:	90 61       	ori	r25, 0x10	; 16
 136:	90 83       	st	Z, r25
 138:	e2 e0       	ldi	r30, 0x02	; 2
 13a:	f1 e0       	ldi	r31, 0x01	; 1
 13c:	90 81       	ld	r25, Z
 13e:	97 7f       	andi	r25, 0xF7	; 247
 140:	90 83       	st	Z, r25
 142:	86 ff       	sbrs	r24, 6
 144:	03 c0       	rjmp	.+6      	; 0x14c <lcd_nibble+0x28>
 146:	90 81       	ld	r25, Z
 148:	98 60       	ori	r25, 0x08	; 8
 14a:	90 83       	st	Z, r25
 14c:	73 98       	cbi	0x0e, 3	; 14
 14e:	85 fd       	sbrc	r24, 5
 150:	73 9a       	sbi	0x0e, 3	; 14
 152:	a5 98       	cbi	0x14, 5	; 20
 154:	84 fd       	sbrc	r24, 4
 156:	a5 9a       	sbi	0x14, 5	; 20
 158:	e2 e0       	ldi	r30, 0x02	; 2
 15a:	f1 e0       	ldi	r31, 0x01	; 1
 15c:	80 81       	ld	r24, Z
 15e:	80 64       	ori	r24, 0x40	; 64
 160:	80 83       	st	Z, r24
 162:	85 e0       	ldi	r24, 0x05	; 5
 164:	8a 95       	dec	r24
 166:	f1 f7       	brne	.-4      	; 0x164 <lcd_nibble+0x40>
 168:	00 00       	nop
 16a:	80 81       	ld	r24, Z
 16c:	8f 7b       	andi	r24, 0xBF	; 191
 16e:	80 83       	st	Z, r24
 170:	08 95       	ret

00000172 <lcd_command>:
 172:	cf 93       	push	r28
 174:	c8 2f       	mov	r28, r24
 176:	e2 e0       	ldi	r30, 0x02	; 2
 178:	f1 e0       	ldi	r31, 0x01	; 1
 17a:	80 81       	ld	r24, Z
 17c:	8f 7d       	andi	r24, 0xDF	; 223
 17e:	80 83       	st	Z, r24
 180:	8c 2f       	mov	r24, r28
 182:	d0 df       	rcall	.-96     	; 0x124 <lcd_nibble>
 184:	8c 2f       	mov	r24, r28
 186:	82 95       	swap	r24
 188:	80 7f       	andi	r24, 0xF0	; 240
 18a:	cc df       	rcall	.-104    	; 0x124 <lcd_nibble>
 18c:	87 ec       	ldi	r24, 0xC7	; 199
 18e:	90 e0       	ldi	r25, 0x00	; 0
 190:	01 97       	sbiw	r24, 0x01	; 1
 192:	f1 f7       	brne	.-4      	; 0x190 <lcd_command+0x1e>
 194:	00 c0       	rjmp	.+0      	; 0x196 <lcd_command+0x24>
 196:	00 00       	nop
 198:	c4 30       	cpi	r28, 0x04	; 4
 19a:	18 f0       	brcs	.+6      	; 0x1a2 <lcd_command+0x30>
 19c:	c0 38       	cpi	r28, 0x80	; 128
 19e:	50 f0       	brcs	.+20     	; 0x1b4 <lcd_command+0x42>
 1a0:	07 c0       	rjmp	.+14     	; 0x1b0 <lcd_command+0x3e>
 1a2:	8f e3       	ldi	r24, 0x3F	; 63
 1a4:	9f e1       	ldi	r25, 0x1F	; 31
 1a6:	01 97       	sbiw	r24, 0x01	; 1
 1a8:	f1 f7       	brne	.-4      	; 0x1a6 <lcd_command+0x34>
 1aa:	00 c0       	rjmp	.+0      	; 0x1ac <lcd_command+0x3a>
 1ac:	00 00       	nop
 1ae:	c0 e8       	ldi	r28, 0x80	; 128
 1b0:	c0 93 00 02 	sts	0x0200, r28	; 0x800200 <__data_start>
 1b4:	cf 91       	pop	r28
 1b6:	08 95       	ret

000001b8 <lcd_putchar>:
 1b8:	cf 93       	push	r28
 1ba:	c8 2f       	mov	r28, r24
 1bc:	e2 e0       	ldi	r30, 0x02	; 2
 1be:	f1 e0       	ldi	r31, 0x01	; 1
 1c0:	80 81       	ld	r24, Z
 1c2:	80 62       	ori	r24, 0x20	; 32
 1c4:	80 83       	st	Z, r24
 1c6:	8c 2f       	mov	r24, r28
 1c8:	ad df       	rcall	.-166    	; 0x124 <lcd_nibble>
 1ca:	8c 2f       	mov	r24, r28
 1cc:	82 95       	swap	r24
 1ce:	80 7f       	andi	r24, 0xF0	; 240
 1d0:	a9 df       	rcall	.-174    	; 0x124 <lcd_nibble>
 1d2:	87 ec       	ldi	r24, 0xC7	; 199
 1d4:	90 e0       	ldi	r25, 0x00	; 0
 1d6:	01 97       	sbiw	r24, 0x01	; 1
 1d8:	f1 f7       	brne	.-4      	; 0x1d6 <lcd_putchar+0x1e>
 1da:	00 c0       	rjmp	.+0      	; 0x1dc <lcd_putchar+0x24>
 1dc:	00 00       	nop
 1de:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <__data_start>
 1e2:	8f 5f       	subi	r24, 0xFF	; 255
 1e4:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <__data_start>
 1e8:	80 39       	cpi	r24, 0x90	; 144
 1ea:	21 f0       	breq	.+8      	; 0x1f4 <lcd_putchar+0x3c>
 1ec:	80 3d       	cpi	r24, 0xD0	; 208
 1ee:	21 f4       	brne	.+8      	; 0x1f8 <lcd_putchar+0x40>
 1f0:	80 e8       	ldi	r24, 0x80	; 128
 1f2:	01 c0       	rjmp	.+2      	; 0x1f6 <lcd_putchar+0x3e>
 1f4:	80 ec       	ldi	r24, 0xC0	; 192
 1f6:	bd df       	rcall	.-134    	; 0x172 <lcd_command>
 1f8:	cf 91       	pop	r28
 1fa:	08 95       	ret

000001fc <lcd_puts>:
 1fc:	cf 93       	push	r28
 1fe:	df 93       	push	r29
 200:	ec 01       	movw	r28, r24
 202:	88 81       	ld	r24, Y
 204:	88 23       	and	r24, r24
 206:	29 f0       	breq	.+10     	; 0x212 <lcd_puts+0x16>
 208:	21 96       	adiw	r28, 0x01	; 1
 20a:	d6 df       	rcall	.-84     	; 0x1b8 <lcd_putchar>
 20c:	89 91       	ld	r24, Y+
 20e:	81 11       	cpse	r24, r1
 210:	fc cf       	rjmp	.-8      	; 0x20a <lcd_puts+0xe>
 212:	df 91       	pop	r29
 214:	cf 91       	pop	r28
 216:	08 95       	ret

00000218 <lcd_init>:


void lcd_init( void )
{
  LCD_DDR_D4 = 1;                               // enable output pins
 218:	9d 9a       	sbi	0x13, 5	; 19
  LCD_DDR_D5 = 1;
 21a:	6b 9a       	sbi	0x0d, 3	; 13
  LCD_DDR_D6 = 1;
 21c:	e1 e0       	ldi	r30, 0x01	; 1
 21e:	f1 e0       	ldi	r31, 0x01	; 1
 220:	80 81       	ld	r24, Z
 222:	88 60       	ori	r24, 0x08	; 8
 224:	80 83       	st	Z, r24
  LCD_DDR_D7 = 1;
 226:	80 81       	ld	r24, Z
 228:	80 61       	ori	r24, 0x10	; 16
 22a:	80 83       	st	Z, r24
  LCD_DDR_RS = 1;
 22c:	80 81       	ld	r24, Z
 22e:	80 62       	ori	r24, 0x20	; 32
 230:	80 83       	st	Z, r24
  LCD_DDR_E0 = 1;
 232:	80 81       	ld	r24, Z
 234:	80 64       	ori	r24, 0x40	; 64
 236:	80 83       	st	Z, r24
  LCD_E0 = 0;
 238:	e2 e0       	ldi	r30, 0x02	; 2
 23a:	f1 e0       	ldi	r31, 0x01	; 1
 23c:	80 81       	ld	r24, Z
 23e:	8f 7b       	andi	r24, 0xBF	; 191
 240:	80 83       	st	Z, r24
  LCD_RS = 0;                                   // send commands
 242:	80 81       	ld	r24, Z
 244:	8f 7d       	andi	r24, 0xDF	; 223
 246:	80 83       	st	Z, r24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 248:	8f e5       	ldi	r24, 0x5F	; 95
 24a:	9a ee       	ldi	r25, 0xEA	; 234
 24c:	01 97       	sbiw	r24, 0x01	; 1
 24e:	f1 f7       	brne	.-4      	; 0x24c <lcd_init+0x34>
 250:	00 c0       	rjmp	.+0      	; 0x252 <lcd_init+0x3a>
 252:	00 00       	nop

  _delay_ms( 15 );
  lcd_nibble( 0x30 );
 254:	80 e3       	ldi	r24, 0x30	; 48
 256:	66 df       	rcall	.-308    	; 0x124 <lcd_nibble>
 258:	8f e0       	ldi	r24, 0x0F	; 15
 25a:	90 e4       	ldi	r25, 0x40	; 64
 25c:	01 97       	sbiw	r24, 0x01	; 1
 25e:	f1 f7       	brne	.-4      	; 0x25c <lcd_init+0x44>
 260:	00 c0       	rjmp	.+0      	; 0x262 <lcd_init+0x4a>
 262:	00 00       	nop
  _delay_ms( 4.1 );
  lcd_nibble( 0x30 );
 264:	80 e3       	ldi	r24, 0x30	; 48
 266:	5e df       	rcall	.-324    	; 0x124 <lcd_nibble>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 268:	8f e8       	ldi	r24, 0x8F	; 143
 26a:	91 e0       	ldi	r25, 0x01	; 1
 26c:	01 97       	sbiw	r24, 0x01	; 1
 26e:	f1 f7       	brne	.-4      	; 0x26c <lcd_init+0x54>
 270:	00 c0       	rjmp	.+0      	; 0x272 <lcd_init+0x5a>
  _delay_us( 100 );
  lcd_nibble( 0x30 );
 272:	00 00       	nop
 274:	80 e3       	ldi	r24, 0x30	; 48
 276:	56 df       	rcall	.-340    	; 0x124 <lcd_nibble>
 278:	87 ec       	ldi	r24, 0xC7	; 199
 27a:	90 e0       	ldi	r25, 0x00	; 0
 27c:	01 97       	sbiw	r24, 0x01	; 1
 27e:	f1 f7       	brne	.-4      	; 0x27c <lcd_init+0x64>
 280:	00 c0       	rjmp	.+0      	; 0x282 <lcd_init+0x6a>
  _delay_us( LCD_TIME_DAT );
  lcd_nibble( 0x20 );                           // 4 bit mode
 282:	00 00       	nop
 284:	80 e2       	ldi	r24, 0x20	; 32
 286:	4e df       	rcall	.-356    	; 0x124 <lcd_nibble>
 288:	87 ec       	ldi	r24, 0xC7	; 199
 28a:	90 e0       	ldi	r25, 0x00	; 0
 28c:	01 97       	sbiw	r24, 0x01	; 1
 28e:	f1 f7       	brne	.-4      	; 0x28c <lcd_init+0x74>
 290:	00 c0       	rjmp	.+0      	; 0x292 <lcd_init+0x7a>
  _delay_us( LCD_TIME_DAT );
#if LCD_LINE == 1
  lcd_command( 0x20 );                          // 1 line
#else
  lcd_command( 0x28 );                          // 2 lines 5*7
 292:	00 00       	nop
 294:	88 e2       	ldi	r24, 0x28	; 40
#endif
  lcd_command( 0x08 );                          // display off
 296:	6d df       	rcall	.-294    	; 0x172 <lcd_command>
 298:	88 e0       	ldi	r24, 0x08	; 8
  lcd_command( 0x01 );                          // display clear
 29a:	6b df       	rcall	.-298    	; 0x172 <lcd_command>
 29c:	81 e0       	ldi	r24, 0x01	; 1
 29e:	69 df       	rcall	.-302    	; 0x172 <lcd_command>
  lcd_command( 0x06 );                          // cursor increment
 2a0:	86 e0       	ldi	r24, 0x06	; 6
 2a2:	67 df       	rcall	.-306    	; 0x172 <lcd_command>
 2a4:	8c e0       	ldi	r24, 0x0C	; 12
  lcd_command( 0x0C );                          // on, no cursor, no blink
 2a6:	65 cf       	rjmp	.-310    	; 0x172 <lcd_command>
 2a8:	08 95       	ret

000002aa <increment>:
char lapped = 0;
char curr_lap[7];
char last_lap[7];

void increment(){
	tenths++;
 2aa:	80 91 3c 02 	lds	r24, 0x023C	; 0x80023c <tenths>
 2ae:	90 91 3d 02 	lds	r25, 0x023D	; 0x80023d <tenths+0x1>
 2b2:	01 96       	adiw	r24, 0x01	; 1
 2b4:	90 93 3d 02 	sts	0x023D, r25	; 0x80023d <tenths+0x1>
 2b8:	80 93 3c 02 	sts	0x023C, r24	; 0x80023c <tenths>
	if(tenths==9){
 2bc:	09 97       	sbiw	r24, 0x09	; 9
 2be:	69 f4       	brne	.+26     	; 0x2da <increment+0x30>
		sec_l++;
 2c0:	80 91 3a 02 	lds	r24, 0x023A	; 0x80023a <sec_l>
 2c4:	90 91 3b 02 	lds	r25, 0x023B	; 0x80023b <sec_l+0x1>
 2c8:	01 96       	adiw	r24, 0x01	; 1
 2ca:	90 93 3b 02 	sts	0x023B, r25	; 0x80023b <sec_l+0x1>
 2ce:	80 93 3a 02 	sts	0x023A, r24	; 0x80023a <sec_l>
		tenths = 0;
 2d2:	10 92 3d 02 	sts	0x023D, r1	; 0x80023d <tenths+0x1>
 2d6:	10 92 3c 02 	sts	0x023C, r1	; 0x80023c <tenths>
	}
	if(sec_l==9){
 2da:	80 91 3a 02 	lds	r24, 0x023A	; 0x80023a <sec_l>
 2de:	90 91 3b 02 	lds	r25, 0x023B	; 0x80023b <sec_l+0x1>
 2e2:	09 97       	sbiw	r24, 0x09	; 9
 2e4:	69 f4       	brne	.+26     	; 0x300 <increment+0x56>
		sec_h++;
 2e6:	80 91 38 02 	lds	r24, 0x0238	; 0x800238 <sec_h>
 2ea:	90 91 39 02 	lds	r25, 0x0239	; 0x800239 <sec_h+0x1>
 2ee:	01 96       	adiw	r24, 0x01	; 1
 2f0:	90 93 39 02 	sts	0x0239, r25	; 0x800239 <sec_h+0x1>
 2f4:	80 93 38 02 	sts	0x0238, r24	; 0x800238 <sec_h>
		sec_l=0;
 2f8:	10 92 3b 02 	sts	0x023B, r1	; 0x80023b <sec_l+0x1>
 2fc:	10 92 3a 02 	sts	0x023A, r1	; 0x80023a <sec_l>
	}
	if(sec_h==6){
 300:	80 91 38 02 	lds	r24, 0x0238	; 0x800238 <sec_h>
 304:	90 91 39 02 	lds	r25, 0x0239	; 0x800239 <sec_h+0x1>
 308:	06 97       	sbiw	r24, 0x06	; 6
 30a:	69 f4       	brne	.+26     	; 0x326 <increment+0x7c>
		min_l++;
 30c:	80 91 36 02 	lds	r24, 0x0236	; 0x800236 <min_l>
 310:	90 91 37 02 	lds	r25, 0x0237	; 0x800237 <min_l+0x1>
 314:	01 96       	adiw	r24, 0x01	; 1
 316:	90 93 37 02 	sts	0x0237, r25	; 0x800237 <min_l+0x1>
 31a:	80 93 36 02 	sts	0x0236, r24	; 0x800236 <min_l>
		sec_h=0;
 31e:	10 92 39 02 	sts	0x0239, r1	; 0x800239 <sec_h+0x1>
 322:	10 92 38 02 	sts	0x0238, r1	; 0x800238 <sec_h>
	}
	if(min_l==9){
 326:	80 91 36 02 	lds	r24, 0x0236	; 0x800236 <min_l>
 32a:	90 91 37 02 	lds	r25, 0x0237	; 0x800237 <min_l+0x1>
 32e:	09 97       	sbiw	r24, 0x09	; 9
 330:	69 f4       	brne	.+26     	; 0x34c <increment+0xa2>
		min_h++;
 332:	80 91 34 02 	lds	r24, 0x0234	; 0x800234 <min_h>
 336:	90 91 35 02 	lds	r25, 0x0235	; 0x800235 <min_h+0x1>
 33a:	01 96       	adiw	r24, 0x01	; 1
 33c:	90 93 35 02 	sts	0x0235, r25	; 0x800235 <min_h+0x1>
 340:	80 93 34 02 	sts	0x0234, r24	; 0x800234 <min_h>
		min_l=0;
 344:	10 92 37 02 	sts	0x0237, r1	; 0x800237 <min_l+0x1>
 348:	10 92 36 02 	sts	0x0236, r1	; 0x800236 <min_l>
 34c:	08 95       	ret

0000034e <display_lcd>:
		}
}


void display_lcd(int min_h,int min_l,int sec_h,int sec_l,int tenths){
 34e:	0f 93       	push	r16
 350:	1f 93       	push	r17
 352:	cf 93       	push	r28
 354:	df 93       	push	r29
 356:	cd b7       	in	r28, 0x3d	; 61
 358:	de b7       	in	r29, 0x3e	; 62
 35a:	2e 97       	sbiw	r28, 0x0e	; 14
 35c:	0f b6       	in	r0, 0x3f	; 63
 35e:	f8 94       	cli
 360:	de bf       	out	0x3e, r29	; 62
 362:	0f be       	out	0x3f, r0	; 63
 364:	cd bf       	out	0x3d, r28	; 61
	char str[14];
	sprintf(str, "Time: %d%d:%d%d:%d",min_h,min_l,sec_h,sec_l,tenths);
 366:	1f 93       	push	r17
 368:	0f 93       	push	r16
 36a:	3f 93       	push	r19
 36c:	2f 93       	push	r18
 36e:	5f 93       	push	r21
 370:	4f 93       	push	r20
 372:	7f 93       	push	r23
 374:	6f 93       	push	r22
 376:	9f 93       	push	r25
 378:	8f 93       	push	r24
 37a:	81 e0       	ldi	r24, 0x01	; 1
 37c:	92 e0       	ldi	r25, 0x02	; 2
 37e:	9f 93       	push	r25
 380:	8f 93       	push	r24
 382:	8e 01       	movw	r16, r28
 384:	0f 5f       	subi	r16, 0xFF	; 255
 386:	1f 4f       	sbci	r17, 0xFF	; 255
 388:	1f 93       	push	r17
 38a:	0f 93       	push	r16
 38c:	c1 d1       	rcall	.+898    	; 0x710 <sprintf>
void lcd_command( uint8_t d );

// An inline function to set the x and y position
// in a 2-line LCD display
static inline void lcd_xy(uint8_t x, uint8_t y){
	lcd_command(x + ((y==1) ? LCD_LINE2 : LCD_LINE1 ));
 38e:	80 e8       	ldi	r24, 0x80	; 128
 390:	f0 de       	rcall	.-544    	; 0x172 <lcd_command>
	lcd_xy(0,0);
	lcd_puts(str);
 392:	c8 01       	movw	r24, r16
 394:	33 df       	rcall	.-410    	; 0x1fc <lcd_puts>
 396:	0f b6       	in	r0, 0x3f	; 63
}
 398:	f8 94       	cli
 39a:	de bf       	out	0x3e, r29	; 62
 39c:	0f be       	out	0x3f, r0	; 63
 39e:	cd bf       	out	0x3d, r28	; 61
 3a0:	2e 96       	adiw	r28, 0x0e	; 14
 3a2:	0f b6       	in	r0, 0x3f	; 63
 3a4:	f8 94       	cli
 3a6:	de bf       	out	0x3e, r29	; 62
 3a8:	0f be       	out	0x3f, r0	; 63
 3aa:	cd bf       	out	0x3d, r28	; 61
 3ac:	df 91       	pop	r29
 3ae:	cf 91       	pop	r28
 3b0:	1f 91       	pop	r17
 3b2:	0f 91       	pop	r16
 3b4:	08 95       	ret

000003b6 <__vector_21>:
 3b6:	1f 92       	push	r1

ISR(TIMER0_COMPA_vect){
 3b8:	0f 92       	push	r0
 3ba:	0f b6       	in	r0, 0x3f	; 63
 3bc:	0f 92       	push	r0
 3be:	11 24       	eor	r1, r1
 3c0:	0b b6       	in	r0, 0x3b	; 59
 3c2:	0f 92       	push	r0
 3c4:	0f 93       	push	r16
 3c6:	1f 93       	push	r17
 3c8:	2f 93       	push	r18
 3ca:	3f 93       	push	r19
 3cc:	4f 93       	push	r20
 3ce:	5f 93       	push	r21
 3d0:	6f 93       	push	r22
 3d2:	7f 93       	push	r23
 3d4:	8f 93       	push	r24
 3d6:	9f 93       	push	r25
 3d8:	af 93       	push	r26
 3da:	bf 93       	push	r27
 3dc:	ef 93       	push	r30
 3de:	ff 93       	push	r31

	interrupt_count++;
 3e0:	80 91 3e 02 	lds	r24, 0x023E	; 0x80023e <interrupt_count>
 3e4:	90 91 3f 02 	lds	r25, 0x023F	; 0x80023f <interrupt_count+0x1>
 3e8:	9c 01       	movw	r18, r24
 3ea:	2f 5f       	subi	r18, 0xFF	; 255
 3ec:	3f 4f       	sbci	r19, 0xFF	; 255
	//Every 200 interrupts is 1/10th of a second
	if (interrupt_count >= 200){
 3ee:	28 3c       	cpi	r18, 0xC8	; 200
 3f0:	31 05       	cpc	r19, r1
 3f2:	2c f4       	brge	.+10     	; 0x3fe <__vector_21+0x48>
	lcd_puts(str);
}

ISR(TIMER0_COMPA_vect){

	interrupt_count++;
 3f4:	30 93 3f 02 	sts	0x023F, r19	; 0x80023f <interrupt_count+0x1>
 3f8:	20 93 3e 02 	sts	0x023E, r18	; 0x80023e <interrupt_count>
 3fc:	1c c0       	rjmp	.+56     	; 0x436 <__LOCK_REGION_LENGTH__+0x36>
	//Every 200 interrupts is 1/10th of a second
	if (interrupt_count >= 200){
		interrupt_count -= 200;
 3fe:	87 5c       	subi	r24, 0xC7	; 199
 400:	91 09       	sbc	r25, r1
 402:	90 93 3f 02 	sts	0x023F, r25	; 0x80023f <interrupt_count+0x1>
 406:	80 93 3e 02 	sts	0x023E, r24	; 0x80023e <interrupt_count>
		increment();
 40a:	4f df       	rcall	.-354    	; 0x2aa <increment>
		display_lcd(min_h,min_l,sec_h,sec_l,tenths);
 40c:	00 91 3c 02 	lds	r16, 0x023C	; 0x80023c <tenths>
 410:	10 91 3d 02 	lds	r17, 0x023D	; 0x80023d <tenths+0x1>
 414:	20 91 3a 02 	lds	r18, 0x023A	; 0x80023a <sec_l>
 418:	30 91 3b 02 	lds	r19, 0x023B	; 0x80023b <sec_l+0x1>
 41c:	40 91 38 02 	lds	r20, 0x0238	; 0x800238 <sec_h>
 420:	50 91 39 02 	lds	r21, 0x0239	; 0x800239 <sec_h+0x1>
 424:	60 91 36 02 	lds	r22, 0x0236	; 0x800236 <min_l>
 428:	70 91 37 02 	lds	r23, 0x0237	; 0x800237 <min_l+0x1>
 42c:	80 91 34 02 	lds	r24, 0x0234	; 0x800234 <min_h>
 430:	90 91 35 02 	lds	r25, 0x0235	; 0x800235 <min_h+0x1>
 434:	8c df       	rcall	.-232    	; 0x34e <display_lcd>
	
		
		//Flip the value of LED_state
	}
}
 436:	ff 91       	pop	r31
 438:	ef 91       	pop	r30
 43a:	bf 91       	pop	r27
 43c:	af 91       	pop	r26
 43e:	9f 91       	pop	r25
 440:	8f 91       	pop	r24
 442:	7f 91       	pop	r23
 444:	6f 91       	pop	r22
 446:	5f 91       	pop	r21
 448:	4f 91       	pop	r20
 44a:	3f 91       	pop	r19
 44c:	2f 91       	pop	r18
 44e:	1f 91       	pop	r17
 450:	0f 91       	pop	r16
 452:	0f 90       	pop	r0
 454:	0b be       	out	0x3b, r0	; 59
 456:	0f 90       	pop	r0
 458:	0f be       	out	0x3f, r0	; 63
 45a:	0f 90       	pop	r0
 45c:	1f 90       	pop	r1
 45e:	18 95       	reti

00000460 <timer0_setup>:
void timer0_setup(){
	//You can also enable output compare mode or use other
	//timers (as you would do in assembly).

	TIMSK0 = 0x02;
 460:	82 e0       	ldi	r24, 0x02	; 2
 462:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__TEXT_REGION_LENGTH__+0x70006e>
	TCNT0 = 0x00;
 466:	16 bc       	out	0x26, r1	; 38
	TIFR0 = 0x01;
 468:	91 e0       	ldi	r25, 0x01	; 1
 46a:	95 bb       	out	0x15, r25	; 21
	
	TCCR0A = 0x02;
 46c:	84 bd       	out	0x24, r24	; 36
	TCCR0B = 0x03; //Prescaler of 64
 46e:	83 e0       	ldi	r24, 0x03	; 3
 470:	85 bd       	out	0x25, r24	; 37
	OCR0A = 124;
 472:	8c e7       	ldi	r24, 0x7C	; 124
 474:	87 bd       	out	0x27, r24	; 39
 476:	08 95       	ret

00000478 <poll_adc>:

//Taken from lab 9 of the course as provided to us
unsigned short poll_adc(){
	unsigned short adc_result = 0; //16 bits
	
	ADCSRA |= 0x40;
 478:	ea e7       	ldi	r30, 0x7A	; 122
 47a:	f0 e0       	ldi	r31, 0x00	; 0
 47c:	80 81       	ld	r24, Z
 47e:	80 64       	ori	r24, 0x40	; 64
 480:	80 83       	st	Z, r24
	while((ADCSRA & 0x40) == 0x40); //Busy-wait
 482:	80 81       	ld	r24, Z
 484:	86 fd       	sbrc	r24, 6
 486:	fd cf       	rjmp	.-6      	; 0x482 <poll_adc+0xa>
	
	unsigned short result_low = ADCL;
 488:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x700078>
	unsigned short result_high = ADCH;
 48c:	20 91 79 00 	lds	r18, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x700079>
	
	adc_result = (result_high<<8)|result_low;
	return adc_result;
 490:	90 e0       	ldi	r25, 0x00	; 0
}
 492:	92 2b       	or	r25, r18
 494:	08 95       	ret

00000496 <select>:

//handles select button implementation
void select(){
	if(ignore==0){
 496:	80 91 33 02 	lds	r24, 0x0233	; 0x800233 <ignore>
 49a:	81 11       	cpse	r24, r1
 49c:	11 c0       	rjmp	.+34     	; 0x4c0 <select+0x2a>
		ignore = 1;
 49e:	81 e0       	ldi	r24, 0x01	; 1
 4a0:	80 93 33 02 	sts	0x0233, r24	; 0x800233 <ignore>
	if(paused==0){
 4a4:	80 91 32 02 	lds	r24, 0x0232	; 0x800232 <__data_end>
 4a8:	81 11       	cpse	r24, r1
 4aa:	05 c0       	rjmp	.+10     	; 0x4b6 <select+0x20>
		sei();
 4ac:	78 94       	sei
		paused = 1;
 4ae:	81 e0       	ldi	r24, 0x01	; 1
 4b0:	80 93 32 02 	sts	0x0232, r24	; 0x800232 <__data_end>
 4b4:	05 c0       	rjmp	.+10     	; 0x4c0 <select+0x2a>
		}
	else if(paused==1){
 4b6:	81 30       	cpi	r24, 0x01	; 1
 4b8:	19 f4       	brne	.+6      	; 0x4c0 <select+0x2a>
		cli();
 4ba:	f8 94       	cli
		paused = 0;
 4bc:	10 92 32 02 	sts	0x0232, r1	; 0x800232 <__data_end>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 4c0:	2f ef       	ldi	r18, 0xFF	; 255
 4c2:	81 ee       	ldi	r24, 0xE1	; 225
 4c4:	94 e0       	ldi	r25, 0x04	; 4
 4c6:	21 50       	subi	r18, 0x01	; 1
 4c8:	80 40       	sbci	r24, 0x00	; 0
 4ca:	90 40       	sbci	r25, 0x00	; 0
 4cc:	e1 f7       	brne	.-8      	; 0x4c6 <select+0x30>
 4ce:	00 c0       	rjmp	.+0      	; 0x4d0 <select+0x3a>
 4d0:	00 00       	nop
 4d2:	08 95       	ret

000004d4 <clear_timer>:
		}
	}
	_delay_ms(100);
}

void clear_timer(){
 4d4:	0f 93       	push	r16
 4d6:	1f 93       	push	r17
	tenths = min_h = min_l = sec_h = sec_l = 0;
 4d8:	10 92 3b 02 	sts	0x023B, r1	; 0x80023b <sec_l+0x1>
 4dc:	10 92 3a 02 	sts	0x023A, r1	; 0x80023a <sec_l>
 4e0:	10 92 39 02 	sts	0x0239, r1	; 0x800239 <sec_h+0x1>
 4e4:	10 92 38 02 	sts	0x0238, r1	; 0x800238 <sec_h>
 4e8:	10 92 37 02 	sts	0x0237, r1	; 0x800237 <min_l+0x1>
 4ec:	10 92 36 02 	sts	0x0236, r1	; 0x800236 <min_l>
 4f0:	10 92 35 02 	sts	0x0235, r1	; 0x800235 <min_h+0x1>
 4f4:	10 92 34 02 	sts	0x0234, r1	; 0x800234 <min_h>
 4f8:	10 92 3d 02 	sts	0x023D, r1	; 0x80023d <tenths+0x1>
 4fc:	10 92 3c 02 	sts	0x023C, r1	; 0x80023c <tenths>
	display_lcd(min_h,min_l,sec_h,sec_l,tenths);
 500:	00 e0       	ldi	r16, 0x00	; 0
 502:	10 e0       	ldi	r17, 0x00	; 0
 504:	20 e0       	ldi	r18, 0x00	; 0
 506:	30 e0       	ldi	r19, 0x00	; 0
 508:	40 e0       	ldi	r20, 0x00	; 0
 50a:	50 e0       	ldi	r21, 0x00	; 0
 50c:	60 e0       	ldi	r22, 0x00	; 0
 50e:	70 e0       	ldi	r23, 0x00	; 0
 510:	80 e0       	ldi	r24, 0x00	; 0
 512:	90 e0       	ldi	r25, 0x00	; 0
 514:	1c df       	rcall	.-456    	; 0x34e <display_lcd>
	cli();
 516:	f8 94       	cli
	paused = 0;
 518:	10 92 32 02 	sts	0x0232, r1	; 0x800232 <__data_end>
}
 51c:	1f 91       	pop	r17
 51e:	0f 91       	pop	r16
 520:	08 95       	ret

00000522 <set_lap>:

void set_lap(){
	if(ignore==0){
 522:	80 91 33 02 	lds	r24, 0x0233	; 0x800233 <ignore>
 526:	81 11       	cpse	r24, r1
 528:	43 c0       	rjmp	.+134    	; 0x5b0 <set_lap+0x8e>
		ignore = 1;
 52a:	81 e0       	ldi	r24, 0x01	; 1
 52c:	80 93 33 02 	sts	0x0233, r24	; 0x800233 <ignore>
 530:	80 ec       	ldi	r24, 0xC0	; 192
 532:	1f de       	rcall	.-962    	; 0x172 <lcd_command>
		lcd_xy(0,1);
		lcd_puts(last_lap);
 534:	87 e4       	ldi	r24, 0x47	; 71
 536:	92 e0       	ldi	r25, 0x02	; 2
 538:	61 de       	rcall	.-830    	; 0x1fc <lcd_puts>
		sprintf(curr_lap, "%d%d:%d%d.%d",min_h,min_l,sec_h,sec_l,tenths);
 53a:	80 91 3d 02 	lds	r24, 0x023D	; 0x80023d <tenths+0x1>
 53e:	8f 93       	push	r24
 540:	80 91 3c 02 	lds	r24, 0x023C	; 0x80023c <tenths>
 544:	8f 93       	push	r24
 546:	80 91 3b 02 	lds	r24, 0x023B	; 0x80023b <sec_l+0x1>
 54a:	8f 93       	push	r24
 54c:	80 91 3a 02 	lds	r24, 0x023A	; 0x80023a <sec_l>
 550:	8f 93       	push	r24
 552:	80 91 39 02 	lds	r24, 0x0239	; 0x800239 <sec_h+0x1>
 556:	8f 93       	push	r24
 558:	80 91 38 02 	lds	r24, 0x0238	; 0x800238 <sec_h>
 55c:	8f 93       	push	r24
 55e:	80 91 37 02 	lds	r24, 0x0237	; 0x800237 <min_l+0x1>
 562:	8f 93       	push	r24
 564:	80 91 36 02 	lds	r24, 0x0236	; 0x800236 <min_l>
 568:	8f 93       	push	r24
 56a:	80 91 35 02 	lds	r24, 0x0235	; 0x800235 <min_h+0x1>
 56e:	8f 93       	push	r24
 570:	80 91 34 02 	lds	r24, 0x0234	; 0x800234 <min_h>
 574:	8f 93       	push	r24
 576:	84 e1       	ldi	r24, 0x14	; 20
 578:	92 e0       	ldi	r25, 0x02	; 2
 57a:	9f 93       	push	r25
 57c:	8f 93       	push	r24
 57e:	80 e4       	ldi	r24, 0x40	; 64
 580:	92 e0       	ldi	r25, 0x02	; 2
 582:	9f 93       	push	r25
 584:	8f 93       	push	r24
 586:	c4 d0       	rcall	.+392    	; 0x710 <sprintf>
 588:	89 ec       	ldi	r24, 0xC9	; 201
		lcd_xy(9,1);
		lcd_puts(curr_lap);
 58a:	f3 dd       	rcall	.-1050   	; 0x172 <lcd_command>
 58c:	80 e4       	ldi	r24, 0x40	; 64
 58e:	92 e0       	ldi	r25, 0x02	; 2
 590:	35 de       	rcall	.-918    	; 0x1fc <lcd_puts>
		strncpy(last_lap,curr_lap,7);
 592:	47 e0       	ldi	r20, 0x07	; 7
 594:	50 e0       	ldi	r21, 0x00	; 0
 596:	60 e4       	ldi	r22, 0x40	; 64
 598:	72 e0       	ldi	r23, 0x02	; 2
 59a:	87 e4       	ldi	r24, 0x47	; 71
 59c:	92 e0       	ldi	r25, 0x02	; 2
 59e:	a9 d0       	rcall	.+338    	; 0x6f2 <strncpy>
 5a0:	8d b7       	in	r24, 0x3d	; 61
 5a2:	9e b7       	in	r25, 0x3e	; 62
 5a4:	0e 96       	adiw	r24, 0x0e	; 14
 5a6:	0f b6       	in	r0, 0x3f	; 63
 5a8:	f8 94       	cli
 5aa:	9e bf       	out	0x3e, r25	; 62
 5ac:	0f be       	out	0x3f, r0	; 63
 5ae:	8d bf       	out	0x3d, r24	; 61
 5b0:	08 95       	ret

000005b2 <init_laps>:
	}
}

void init_laps(){
 5b2:	cf 93       	push	r28
 5b4:	df 93       	push	r29
	sprintf(curr_lap,"%d%d:%d%d.%d",0,0,0,0,0);
 5b6:	1f 92       	push	r1
 5b8:	1f 92       	push	r1
 5ba:	1f 92       	push	r1
 5bc:	1f 92       	push	r1
 5be:	1f 92       	push	r1
 5c0:	1f 92       	push	r1
 5c2:	1f 92       	push	r1
 5c4:	1f 92       	push	r1
 5c6:	1f 92       	push	r1
 5c8:	1f 92       	push	r1
 5ca:	c4 e1       	ldi	r28, 0x14	; 20
 5cc:	d2 e0       	ldi	r29, 0x02	; 2
 5ce:	df 93       	push	r29
 5d0:	cf 93       	push	r28
 5d2:	80 e4       	ldi	r24, 0x40	; 64
 5d4:	92 e0       	ldi	r25, 0x02	; 2
 5d6:	9f 93       	push	r25
 5d8:	8f 93       	push	r24
 5da:	9a d0       	rcall	.+308    	; 0x710 <sprintf>
	sprintf(last_lap,"%d%d:%d%d.%d",0,0,0,0,0);
 5dc:	1f 92       	push	r1
 5de:	1f 92       	push	r1
 5e0:	1f 92       	push	r1
 5e2:	1f 92       	push	r1
 5e4:	1f 92       	push	r1
 5e6:	1f 92       	push	r1
 5e8:	1f 92       	push	r1
 5ea:	1f 92       	push	r1
 5ec:	1f 92       	push	r1
 5ee:	1f 92       	push	r1
 5f0:	df 93       	push	r29
 5f2:	cf 93       	push	r28
 5f4:	87 e4       	ldi	r24, 0x47	; 71
 5f6:	92 e0       	ldi	r25, 0x02	; 2
 5f8:	9f 93       	push	r25
 5fa:	8f 93       	push	r24
 5fc:	89 d0       	rcall	.+274    	; 0x710 <sprintf>
}
 5fe:	8d b7       	in	r24, 0x3d	; 61
 600:	9e b7       	in	r25, 0x3e	; 62
 602:	4c 96       	adiw	r24, 0x1c	; 28
 604:	0f b6       	in	r0, 0x3f	; 63
 606:	f8 94       	cli
 608:	9e bf       	out	0x3e, r25	; 62
 60a:	0f be       	out	0x3f, r0	; 63
 60c:	8d bf       	out	0x3d, r24	; 61
 60e:	df 91       	pop	r29
 610:	cf 91       	pop	r28
 612:	08 95       	ret

00000614 <down>:

void down(){
	if(ignore==0){
 614:	80 91 33 02 	lds	r24, 0x0233	; 0x800233 <ignore>
 618:	81 11       	cpse	r24, r1
 61a:	09 c0       	rjmp	.+18     	; 0x62e <down+0x1a>
	ignore = 1;	
 61c:	81 e0       	ldi	r24, 0x01	; 1
 61e:	80 93 33 02 	sts	0x0233, r24	; 0x800233 <ignore>
	init_laps();
 622:	c7 df       	rcall	.-114    	; 0x5b2 <init_laps>
 624:	80 ec       	ldi	r24, 0xC0	; 192
 626:	a5 dd       	rcall	.-1206   	; 0x172 <lcd_command>
	lcd_xy(0,1);
	lcd_puts("                ");
 628:	81 e2       	ldi	r24, 0x21	; 33
 62a:	92 e0       	ldi	r25, 0x02	; 2
 62c:	e7 cd       	rjmp	.-1074   	; 0x1fc <lcd_puts>
 62e:	08 95       	ret

00000630 <buttons>:
	}
}

void buttons(){
	
	short adc_result = poll_adc();
 630:	23 df       	rcall	.-442    	; 0x478 <poll_adc>
	if (adc_result >= ADC_BTN_RIGHT && adc_result < ADC_BTN_UP){
 632:	9c 01       	movw	r18, r24
 634:	22 53       	subi	r18, 0x32	; 50
 636:	31 09       	sbc	r19, r1
 638:	21 39       	cpi	r18, 0x91	; 145
 63a:	31 05       	cpc	r19, r1
		//Up button pressed
		set_lap();
 63c:	68 f4       	brcc	.+26     	; 0x658 <buttons+0x28>
 63e:	71 df       	rcall	.-286    	; 0x522 <set_lap>
 640:	2f ef       	ldi	r18, 0xFF	; 255
 642:	84 e3       	ldi	r24, 0x34	; 52
 644:	9c e0       	ldi	r25, 0x0C	; 12
 646:	21 50       	subi	r18, 0x01	; 1
 648:	80 40       	sbci	r24, 0x00	; 0
 64a:	90 40       	sbci	r25, 0x00	; 0
 64c:	e1 f7       	brne	.-8      	; 0x646 <buttons+0x16>
 64e:	00 c0       	rjmp	.+0      	; 0x650 <buttons+0x20>
 650:	00 00       	nop
		//display_lap();
		_delay_ms(250);
		ignore = 0;
 652:	10 92 33 02 	sts	0x0233, r1	; 0x800233 <ignore>
 656:	08 95       	ret
	}
	else if (adc_result >= ADC_BTN_UP && adc_result < ADC_BTN_DOWN){
 658:	9c 01       	movw	r18, r24
 65a:	23 5c       	subi	r18, 0xC3	; 195
 65c:	31 09       	sbc	r19, r1
 65e:	29 3b       	cpi	r18, 0xB9	; 185
 660:	31 05       	cpc	r19, r1
		//down button pressed
		down();
 662:	68 f4       	brcc	.+26     	; 0x67e <buttons+0x4e>
 664:	d7 df       	rcall	.-82     	; 0x614 <down>
 666:	2f ef       	ldi	r18, 0xFF	; 255
 668:	84 e3       	ldi	r24, 0x34	; 52
 66a:	9c e0       	ldi	r25, 0x0C	; 12
 66c:	21 50       	subi	r18, 0x01	; 1
 66e:	80 40       	sbci	r24, 0x00	; 0
 670:	90 40       	sbci	r25, 0x00	; 0
 672:	e1 f7       	brne	.-8      	; 0x66c <buttons+0x3c>
 674:	00 c0       	rjmp	.+0      	; 0x676 <buttons+0x46>
 676:	00 00       	nop
		_delay_ms(250);
		ignore =0;
 678:	10 92 33 02 	sts	0x0233, r1	; 0x800233 <ignore>
 67c:	08 95       	ret
	}
	else if (adc_result >= ADC_BTN_DOWN && adc_result < ADC_BTN_LEFT){
 67e:	9c 01       	movw	r18, r24
 680:	2c 57       	subi	r18, 0x7C	; 124
 682:	31 40       	sbci	r19, 0x01	; 1
 684:	2f 3a       	cpi	r18, 0xAF	; 175
 686:	31 05       	cpc	r19, r1
		//LEFT button pressed
		clear_timer();
 688:	10 f4       	brcc	.+4      	; 0x68e <buttons+0x5e>
 68a:	24 cf       	rjmp	.-440    	; 0x4d4 <clear_timer>
 68c:	08 95       	ret
		
	}
	else if (adc_result >= ADC_BTN_LEFT && adc_result < ADC_BTN_SELECT){
 68e:	8b 52       	subi	r24, 0x2B	; 43
 690:	92 40       	sbci	r25, 0x02	; 2
 692:	8b 3e       	cpi	r24, 0xEB	; 235
 694:	91 05       	cpc	r25, r1
		select();
 696:	60 f4       	brcc	.+24     	; 0x6b0 <buttons+0x80>
 698:	fe de       	rcall	.-516    	; 0x496 <select>
 69a:	2f ef       	ldi	r18, 0xFF	; 255
 69c:	81 ee       	ldi	r24, 0xE1	; 225
 69e:	94 e0       	ldi	r25, 0x04	; 4
 6a0:	21 50       	subi	r18, 0x01	; 1
 6a2:	80 40       	sbci	r24, 0x00	; 0
 6a4:	90 40       	sbci	r25, 0x00	; 0
 6a6:	e1 f7       	brne	.-8      	; 0x6a0 <buttons+0x70>
 6a8:	00 c0       	rjmp	.+0      	; 0x6aa <buttons+0x7a>
 6aa:	00 00       	nop
		_delay_ms(100);	
		ignore = 0;
 6ac:	10 92 33 02 	sts	0x0233, r1	; 0x800233 <ignore>
 6b0:	08 95       	ret

000006b2 <main>:
}


int main(void)
{	
	ADCSRA = 0x87;
 6b2:	87 e8       	ldi	r24, 0x87	; 135
 6b4:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x70007a>
	ADMUX = 0x40;
 6b8:	80 e4       	ldi	r24, 0x40	; 64
 6ba:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x70007c>
	lcd_init();
 6be:	ac dd       	rcall	.-1192   	; 0x218 <lcd_init>
	timer0_setup();
 6c0:	cf de       	rcall	.-610    	; 0x460 <timer0_setup>
 6c2:	00 91 3c 02 	lds	r16, 0x023C	; 0x80023c <tenths>
	display_lcd(min_h,min_l,sec_h,sec_l,tenths);
 6c6:	10 91 3d 02 	lds	r17, 0x023D	; 0x80023d <tenths+0x1>
 6ca:	20 91 3a 02 	lds	r18, 0x023A	; 0x80023a <sec_l>
 6ce:	30 91 3b 02 	lds	r19, 0x023B	; 0x80023b <sec_l+0x1>
 6d2:	40 91 38 02 	lds	r20, 0x0238	; 0x800238 <sec_h>
 6d6:	50 91 39 02 	lds	r21, 0x0239	; 0x800239 <sec_h+0x1>
 6da:	60 91 36 02 	lds	r22, 0x0236	; 0x800236 <min_l>
 6de:	70 91 37 02 	lds	r23, 0x0237	; 0x800237 <min_l+0x1>
 6e2:	80 91 34 02 	lds	r24, 0x0234	; 0x800234 <min_h>
 6e6:	90 91 35 02 	lds	r25, 0x0235	; 0x800235 <min_h+0x1>
 6ea:	31 de       	rcall	.-926    	; 0x34e <display_lcd>
	init_laps();
 6ec:	62 df       	rcall	.-316    	; 0x5b2 <init_laps>
 6ee:	a0 df       	rcall	.-192    	; 0x630 <buttons>
    while (1) 
    {	
		
		buttons();
 6f0:	fe cf       	rjmp	.-4      	; 0x6ee <main+0x3c>

000006f2 <strncpy>:
 6f2:	fb 01       	movw	r30, r22
 6f4:	dc 01       	movw	r26, r24
 6f6:	41 50       	subi	r20, 0x01	; 1
 6f8:	50 40       	sbci	r21, 0x00	; 0
 6fa:	48 f0       	brcs	.+18     	; 0x70e <strncpy+0x1c>
 6fc:	01 90       	ld	r0, Z+
 6fe:	0d 92       	st	X+, r0
 700:	00 20       	and	r0, r0
 702:	c9 f7       	brne	.-14     	; 0x6f6 <strncpy+0x4>
 704:	01 c0       	rjmp	.+2      	; 0x708 <strncpy+0x16>
 706:	1d 92       	st	X+, r1
 708:	41 50       	subi	r20, 0x01	; 1
 70a:	50 40       	sbci	r21, 0x00	; 0
 70c:	e0 f7       	brcc	.-8      	; 0x706 <strncpy+0x14>
 70e:	08 95       	ret

00000710 <sprintf>:
 710:	0f 93       	push	r16
 712:	1f 93       	push	r17
 714:	cf 93       	push	r28
 716:	df 93       	push	r29
 718:	cd b7       	in	r28, 0x3d	; 61
 71a:	de b7       	in	r29, 0x3e	; 62
 71c:	2e 97       	sbiw	r28, 0x0e	; 14
 71e:	0f b6       	in	r0, 0x3f	; 63
 720:	f8 94       	cli
 722:	de bf       	out	0x3e, r29	; 62
 724:	0f be       	out	0x3f, r0	; 63
 726:	cd bf       	out	0x3d, r28	; 61
 728:	0e 89       	ldd	r16, Y+22	; 0x16
 72a:	1f 89       	ldd	r17, Y+23	; 0x17
 72c:	86 e0       	ldi	r24, 0x06	; 6
 72e:	8c 83       	std	Y+4, r24	; 0x04
 730:	1a 83       	std	Y+2, r17	; 0x02
 732:	09 83       	std	Y+1, r16	; 0x01
 734:	8f ef       	ldi	r24, 0xFF	; 255
 736:	9f e7       	ldi	r25, 0x7F	; 127
 738:	9e 83       	std	Y+6, r25	; 0x06
 73a:	8d 83       	std	Y+5, r24	; 0x05
 73c:	ae 01       	movw	r20, r28
 73e:	46 5e       	subi	r20, 0xE6	; 230
 740:	5f 4f       	sbci	r21, 0xFF	; 255
 742:	68 8d       	ldd	r22, Y+24	; 0x18
 744:	79 8d       	ldd	r23, Y+25	; 0x19
 746:	ce 01       	movw	r24, r28
 748:	01 96       	adiw	r24, 0x01	; 1
 74a:	10 d0       	rcall	.+32     	; 0x76c <vfprintf>
 74c:	ef 81       	ldd	r30, Y+7	; 0x07
 74e:	f8 85       	ldd	r31, Y+8	; 0x08
 750:	e0 0f       	add	r30, r16
 752:	f1 1f       	adc	r31, r17
 754:	10 82       	st	Z, r1
 756:	2e 96       	adiw	r28, 0x0e	; 14
 758:	0f b6       	in	r0, 0x3f	; 63
 75a:	f8 94       	cli
 75c:	de bf       	out	0x3e, r29	; 62
 75e:	0f be       	out	0x3f, r0	; 63
 760:	cd bf       	out	0x3d, r28	; 61
 762:	df 91       	pop	r29
 764:	cf 91       	pop	r28
 766:	1f 91       	pop	r17
 768:	0f 91       	pop	r16
 76a:	08 95       	ret

0000076c <vfprintf>:
 76c:	2f 92       	push	r2
 76e:	3f 92       	push	r3
 770:	4f 92       	push	r4
 772:	5f 92       	push	r5
 774:	6f 92       	push	r6
 776:	7f 92       	push	r7
 778:	8f 92       	push	r8
 77a:	9f 92       	push	r9
 77c:	af 92       	push	r10
 77e:	bf 92       	push	r11
 780:	cf 92       	push	r12
 782:	df 92       	push	r13
 784:	ef 92       	push	r14
 786:	ff 92       	push	r15
 788:	0f 93       	push	r16
 78a:	1f 93       	push	r17
 78c:	cf 93       	push	r28
 78e:	df 93       	push	r29
 790:	cd b7       	in	r28, 0x3d	; 61
 792:	de b7       	in	r29, 0x3e	; 62
 794:	2b 97       	sbiw	r28, 0x0b	; 11
 796:	0f b6       	in	r0, 0x3f	; 63
 798:	f8 94       	cli
 79a:	de bf       	out	0x3e, r29	; 62
 79c:	0f be       	out	0x3f, r0	; 63
 79e:	cd bf       	out	0x3d, r28	; 61
 7a0:	6c 01       	movw	r12, r24
 7a2:	7b 01       	movw	r14, r22
 7a4:	8a 01       	movw	r16, r20
 7a6:	fc 01       	movw	r30, r24
 7a8:	17 82       	std	Z+7, r1	; 0x07
 7aa:	16 82       	std	Z+6, r1	; 0x06
 7ac:	83 81       	ldd	r24, Z+3	; 0x03
 7ae:	81 ff       	sbrs	r24, 1
 7b0:	bf c1       	rjmp	.+894    	; 0xb30 <vfprintf+0x3c4>
 7b2:	ce 01       	movw	r24, r28
 7b4:	01 96       	adiw	r24, 0x01	; 1
 7b6:	3c 01       	movw	r6, r24
 7b8:	f6 01       	movw	r30, r12
 7ba:	93 81       	ldd	r25, Z+3	; 0x03
 7bc:	f7 01       	movw	r30, r14
 7be:	93 fd       	sbrc	r25, 3
 7c0:	85 91       	lpm	r24, Z+
 7c2:	93 ff       	sbrs	r25, 3
 7c4:	81 91       	ld	r24, Z+
 7c6:	7f 01       	movw	r14, r30
 7c8:	88 23       	and	r24, r24
 7ca:	09 f4       	brne	.+2      	; 0x7ce <vfprintf+0x62>
 7cc:	ad c1       	rjmp	.+858    	; 0xb28 <vfprintf+0x3bc>
 7ce:	85 32       	cpi	r24, 0x25	; 37
 7d0:	39 f4       	brne	.+14     	; 0x7e0 <vfprintf+0x74>
 7d2:	93 fd       	sbrc	r25, 3
 7d4:	85 91       	lpm	r24, Z+
 7d6:	93 ff       	sbrs	r25, 3
 7d8:	81 91       	ld	r24, Z+
 7da:	7f 01       	movw	r14, r30
 7dc:	85 32       	cpi	r24, 0x25	; 37
 7de:	21 f4       	brne	.+8      	; 0x7e8 <vfprintf+0x7c>
 7e0:	b6 01       	movw	r22, r12
 7e2:	90 e0       	ldi	r25, 0x00	; 0
 7e4:	d6 d1       	rcall	.+940    	; 0xb92 <fputc>
 7e6:	e8 cf       	rjmp	.-48     	; 0x7b8 <vfprintf+0x4c>
 7e8:	91 2c       	mov	r9, r1
 7ea:	21 2c       	mov	r2, r1
 7ec:	31 2c       	mov	r3, r1
 7ee:	ff e1       	ldi	r31, 0x1F	; 31
 7f0:	f3 15       	cp	r31, r3
 7f2:	d8 f0       	brcs	.+54     	; 0x82a <vfprintf+0xbe>
 7f4:	8b 32       	cpi	r24, 0x2B	; 43
 7f6:	79 f0       	breq	.+30     	; 0x816 <vfprintf+0xaa>
 7f8:	38 f4       	brcc	.+14     	; 0x808 <vfprintf+0x9c>
 7fa:	80 32       	cpi	r24, 0x20	; 32
 7fc:	79 f0       	breq	.+30     	; 0x81c <vfprintf+0xb0>
 7fe:	83 32       	cpi	r24, 0x23	; 35
 800:	a1 f4       	brne	.+40     	; 0x82a <vfprintf+0xbe>
 802:	23 2d       	mov	r18, r3
 804:	20 61       	ori	r18, 0x10	; 16
 806:	1d c0       	rjmp	.+58     	; 0x842 <vfprintf+0xd6>
 808:	8d 32       	cpi	r24, 0x2D	; 45
 80a:	61 f0       	breq	.+24     	; 0x824 <vfprintf+0xb8>
 80c:	80 33       	cpi	r24, 0x30	; 48
 80e:	69 f4       	brne	.+26     	; 0x82a <vfprintf+0xbe>
 810:	23 2d       	mov	r18, r3
 812:	21 60       	ori	r18, 0x01	; 1
 814:	16 c0       	rjmp	.+44     	; 0x842 <vfprintf+0xd6>
 816:	83 2d       	mov	r24, r3
 818:	82 60       	ori	r24, 0x02	; 2
 81a:	38 2e       	mov	r3, r24
 81c:	e3 2d       	mov	r30, r3
 81e:	e4 60       	ori	r30, 0x04	; 4
 820:	3e 2e       	mov	r3, r30
 822:	2a c0       	rjmp	.+84     	; 0x878 <vfprintf+0x10c>
 824:	f3 2d       	mov	r31, r3
 826:	f8 60       	ori	r31, 0x08	; 8
 828:	1d c0       	rjmp	.+58     	; 0x864 <vfprintf+0xf8>
 82a:	37 fc       	sbrc	r3, 7
 82c:	2d c0       	rjmp	.+90     	; 0x888 <vfprintf+0x11c>
 82e:	20 ed       	ldi	r18, 0xD0	; 208
 830:	28 0f       	add	r18, r24
 832:	2a 30       	cpi	r18, 0x0A	; 10
 834:	40 f0       	brcs	.+16     	; 0x846 <vfprintf+0xda>
 836:	8e 32       	cpi	r24, 0x2E	; 46
 838:	b9 f4       	brne	.+46     	; 0x868 <vfprintf+0xfc>
 83a:	36 fc       	sbrc	r3, 6
 83c:	75 c1       	rjmp	.+746    	; 0xb28 <vfprintf+0x3bc>
 83e:	23 2d       	mov	r18, r3
 840:	20 64       	ori	r18, 0x40	; 64
 842:	32 2e       	mov	r3, r18
 844:	19 c0       	rjmp	.+50     	; 0x878 <vfprintf+0x10c>
 846:	36 fe       	sbrs	r3, 6
 848:	06 c0       	rjmp	.+12     	; 0x856 <vfprintf+0xea>
 84a:	8a e0       	ldi	r24, 0x0A	; 10
 84c:	98 9e       	mul	r9, r24
 84e:	20 0d       	add	r18, r0
 850:	11 24       	eor	r1, r1
 852:	92 2e       	mov	r9, r18
 854:	11 c0       	rjmp	.+34     	; 0x878 <vfprintf+0x10c>
 856:	ea e0       	ldi	r30, 0x0A	; 10
 858:	2e 9e       	mul	r2, r30
 85a:	20 0d       	add	r18, r0
 85c:	11 24       	eor	r1, r1
 85e:	22 2e       	mov	r2, r18
 860:	f3 2d       	mov	r31, r3
 862:	f0 62       	ori	r31, 0x20	; 32
 864:	3f 2e       	mov	r3, r31
 866:	08 c0       	rjmp	.+16     	; 0x878 <vfprintf+0x10c>
 868:	8c 36       	cpi	r24, 0x6C	; 108
 86a:	21 f4       	brne	.+8      	; 0x874 <vfprintf+0x108>
 86c:	83 2d       	mov	r24, r3
 86e:	80 68       	ori	r24, 0x80	; 128
 870:	38 2e       	mov	r3, r24
 872:	02 c0       	rjmp	.+4      	; 0x878 <vfprintf+0x10c>
 874:	88 36       	cpi	r24, 0x68	; 104
 876:	41 f4       	brne	.+16     	; 0x888 <vfprintf+0x11c>
 878:	f7 01       	movw	r30, r14
 87a:	93 fd       	sbrc	r25, 3
 87c:	85 91       	lpm	r24, Z+
 87e:	93 ff       	sbrs	r25, 3
 880:	81 91       	ld	r24, Z+
 882:	7f 01       	movw	r14, r30
 884:	81 11       	cpse	r24, r1
 886:	b3 cf       	rjmp	.-154    	; 0x7ee <vfprintf+0x82>
 888:	98 2f       	mov	r25, r24
 88a:	9f 7d       	andi	r25, 0xDF	; 223
 88c:	95 54       	subi	r25, 0x45	; 69
 88e:	93 30       	cpi	r25, 0x03	; 3
 890:	28 f4       	brcc	.+10     	; 0x89c <vfprintf+0x130>
 892:	0c 5f       	subi	r16, 0xFC	; 252
 894:	1f 4f       	sbci	r17, 0xFF	; 255
 896:	9f e3       	ldi	r25, 0x3F	; 63
 898:	99 83       	std	Y+1, r25	; 0x01
 89a:	0d c0       	rjmp	.+26     	; 0x8b6 <vfprintf+0x14a>
 89c:	83 36       	cpi	r24, 0x63	; 99
 89e:	31 f0       	breq	.+12     	; 0x8ac <vfprintf+0x140>
 8a0:	83 37       	cpi	r24, 0x73	; 115
 8a2:	71 f0       	breq	.+28     	; 0x8c0 <vfprintf+0x154>
 8a4:	83 35       	cpi	r24, 0x53	; 83
 8a6:	09 f0       	breq	.+2      	; 0x8aa <vfprintf+0x13e>
 8a8:	55 c0       	rjmp	.+170    	; 0x954 <vfprintf+0x1e8>
 8aa:	20 c0       	rjmp	.+64     	; 0x8ec <vfprintf+0x180>
 8ac:	f8 01       	movw	r30, r16
 8ae:	80 81       	ld	r24, Z
 8b0:	89 83       	std	Y+1, r24	; 0x01
 8b2:	0e 5f       	subi	r16, 0xFE	; 254
 8b4:	1f 4f       	sbci	r17, 0xFF	; 255
 8b6:	88 24       	eor	r8, r8
 8b8:	83 94       	inc	r8
 8ba:	91 2c       	mov	r9, r1
 8bc:	53 01       	movw	r10, r6
 8be:	12 c0       	rjmp	.+36     	; 0x8e4 <vfprintf+0x178>
 8c0:	28 01       	movw	r4, r16
 8c2:	f2 e0       	ldi	r31, 0x02	; 2
 8c4:	4f 0e       	add	r4, r31
 8c6:	51 1c       	adc	r5, r1
 8c8:	f8 01       	movw	r30, r16
 8ca:	a0 80       	ld	r10, Z
 8cc:	b1 80       	ldd	r11, Z+1	; 0x01
 8ce:	36 fe       	sbrs	r3, 6
 8d0:	03 c0       	rjmp	.+6      	; 0x8d8 <vfprintf+0x16c>
 8d2:	69 2d       	mov	r22, r9
 8d4:	70 e0       	ldi	r23, 0x00	; 0
 8d6:	02 c0       	rjmp	.+4      	; 0x8dc <vfprintf+0x170>
 8d8:	6f ef       	ldi	r22, 0xFF	; 255
 8da:	7f ef       	ldi	r23, 0xFF	; 255
 8dc:	c5 01       	movw	r24, r10
 8de:	4e d1       	rcall	.+668    	; 0xb7c <strnlen>
 8e0:	4c 01       	movw	r8, r24
 8e2:	82 01       	movw	r16, r4
 8e4:	f3 2d       	mov	r31, r3
 8e6:	ff 77       	andi	r31, 0x7F	; 127
 8e8:	3f 2e       	mov	r3, r31
 8ea:	15 c0       	rjmp	.+42     	; 0x916 <vfprintf+0x1aa>
 8ec:	28 01       	movw	r4, r16
 8ee:	22 e0       	ldi	r18, 0x02	; 2
 8f0:	42 0e       	add	r4, r18
 8f2:	51 1c       	adc	r5, r1
 8f4:	f8 01       	movw	r30, r16
 8f6:	a0 80       	ld	r10, Z
 8f8:	b1 80       	ldd	r11, Z+1	; 0x01
 8fa:	36 fe       	sbrs	r3, 6
 8fc:	03 c0       	rjmp	.+6      	; 0x904 <vfprintf+0x198>
 8fe:	69 2d       	mov	r22, r9
 900:	70 e0       	ldi	r23, 0x00	; 0
 902:	02 c0       	rjmp	.+4      	; 0x908 <vfprintf+0x19c>
 904:	6f ef       	ldi	r22, 0xFF	; 255
 906:	7f ef       	ldi	r23, 0xFF	; 255
 908:	c5 01       	movw	r24, r10
 90a:	2d d1       	rcall	.+602    	; 0xb66 <strnlen_P>
 90c:	4c 01       	movw	r8, r24
 90e:	f3 2d       	mov	r31, r3
 910:	f0 68       	ori	r31, 0x80	; 128
 912:	3f 2e       	mov	r3, r31
 914:	82 01       	movw	r16, r4
 916:	33 fc       	sbrc	r3, 3
 918:	19 c0       	rjmp	.+50     	; 0x94c <vfprintf+0x1e0>
 91a:	82 2d       	mov	r24, r2
 91c:	90 e0       	ldi	r25, 0x00	; 0
 91e:	88 16       	cp	r8, r24
 920:	99 06       	cpc	r9, r25
 922:	a0 f4       	brcc	.+40     	; 0x94c <vfprintf+0x1e0>
 924:	b6 01       	movw	r22, r12
 926:	80 e2       	ldi	r24, 0x20	; 32
 928:	90 e0       	ldi	r25, 0x00	; 0
 92a:	33 d1       	rcall	.+614    	; 0xb92 <fputc>
 92c:	2a 94       	dec	r2
 92e:	f5 cf       	rjmp	.-22     	; 0x91a <vfprintf+0x1ae>
 930:	f5 01       	movw	r30, r10
 932:	37 fc       	sbrc	r3, 7
 934:	85 91       	lpm	r24, Z+
 936:	37 fe       	sbrs	r3, 7
 938:	81 91       	ld	r24, Z+
 93a:	5f 01       	movw	r10, r30
 93c:	b6 01       	movw	r22, r12
 93e:	90 e0       	ldi	r25, 0x00	; 0
 940:	28 d1       	rcall	.+592    	; 0xb92 <fputc>
 942:	21 10       	cpse	r2, r1
 944:	2a 94       	dec	r2
 946:	21 e0       	ldi	r18, 0x01	; 1
 948:	82 1a       	sub	r8, r18
 94a:	91 08       	sbc	r9, r1
 94c:	81 14       	cp	r8, r1
 94e:	91 04       	cpc	r9, r1
 950:	79 f7       	brne	.-34     	; 0x930 <vfprintf+0x1c4>
 952:	e1 c0       	rjmp	.+450    	; 0xb16 <vfprintf+0x3aa>
 954:	84 36       	cpi	r24, 0x64	; 100
 956:	11 f0       	breq	.+4      	; 0x95c <vfprintf+0x1f0>
 958:	89 36       	cpi	r24, 0x69	; 105
 95a:	39 f5       	brne	.+78     	; 0x9aa <vfprintf+0x23e>
 95c:	f8 01       	movw	r30, r16
 95e:	37 fe       	sbrs	r3, 7
 960:	07 c0       	rjmp	.+14     	; 0x970 <vfprintf+0x204>
 962:	60 81       	ld	r22, Z
 964:	71 81       	ldd	r23, Z+1	; 0x01
 966:	82 81       	ldd	r24, Z+2	; 0x02
 968:	93 81       	ldd	r25, Z+3	; 0x03
 96a:	0c 5f       	subi	r16, 0xFC	; 252
 96c:	1f 4f       	sbci	r17, 0xFF	; 255
 96e:	08 c0       	rjmp	.+16     	; 0x980 <vfprintf+0x214>
 970:	60 81       	ld	r22, Z
 972:	71 81       	ldd	r23, Z+1	; 0x01
 974:	07 2e       	mov	r0, r23
 976:	00 0c       	add	r0, r0
 978:	88 0b       	sbc	r24, r24
 97a:	99 0b       	sbc	r25, r25
 97c:	0e 5f       	subi	r16, 0xFE	; 254
 97e:	1f 4f       	sbci	r17, 0xFF	; 255
 980:	f3 2d       	mov	r31, r3
 982:	ff 76       	andi	r31, 0x6F	; 111
 984:	3f 2e       	mov	r3, r31
 986:	97 ff       	sbrs	r25, 7
 988:	09 c0       	rjmp	.+18     	; 0x99c <vfprintf+0x230>
 98a:	90 95       	com	r25
 98c:	80 95       	com	r24
 98e:	70 95       	com	r23
 990:	61 95       	neg	r22
 992:	7f 4f       	sbci	r23, 0xFF	; 255
 994:	8f 4f       	sbci	r24, 0xFF	; 255
 996:	9f 4f       	sbci	r25, 0xFF	; 255
 998:	f0 68       	ori	r31, 0x80	; 128
 99a:	3f 2e       	mov	r3, r31
 99c:	2a e0       	ldi	r18, 0x0A	; 10
 99e:	30 e0       	ldi	r19, 0x00	; 0
 9a0:	a3 01       	movw	r20, r6
 9a2:	33 d1       	rcall	.+614    	; 0xc0a <__ultoa_invert>
 9a4:	88 2e       	mov	r8, r24
 9a6:	86 18       	sub	r8, r6
 9a8:	44 c0       	rjmp	.+136    	; 0xa32 <vfprintf+0x2c6>
 9aa:	85 37       	cpi	r24, 0x75	; 117
 9ac:	31 f4       	brne	.+12     	; 0x9ba <vfprintf+0x24e>
 9ae:	23 2d       	mov	r18, r3
 9b0:	2f 7e       	andi	r18, 0xEF	; 239
 9b2:	b2 2e       	mov	r11, r18
 9b4:	2a e0       	ldi	r18, 0x0A	; 10
 9b6:	30 e0       	ldi	r19, 0x00	; 0
 9b8:	25 c0       	rjmp	.+74     	; 0xa04 <vfprintf+0x298>
 9ba:	93 2d       	mov	r25, r3
 9bc:	99 7f       	andi	r25, 0xF9	; 249
 9be:	b9 2e       	mov	r11, r25
 9c0:	8f 36       	cpi	r24, 0x6F	; 111
 9c2:	c1 f0       	breq	.+48     	; 0x9f4 <vfprintf+0x288>
 9c4:	18 f4       	brcc	.+6      	; 0x9cc <vfprintf+0x260>
 9c6:	88 35       	cpi	r24, 0x58	; 88
 9c8:	79 f0       	breq	.+30     	; 0x9e8 <vfprintf+0x27c>
 9ca:	ae c0       	rjmp	.+348    	; 0xb28 <vfprintf+0x3bc>
 9cc:	80 37       	cpi	r24, 0x70	; 112
 9ce:	19 f0       	breq	.+6      	; 0x9d6 <vfprintf+0x26a>
 9d0:	88 37       	cpi	r24, 0x78	; 120
 9d2:	21 f0       	breq	.+8      	; 0x9dc <vfprintf+0x270>
 9d4:	a9 c0       	rjmp	.+338    	; 0xb28 <vfprintf+0x3bc>
 9d6:	e9 2f       	mov	r30, r25
 9d8:	e0 61       	ori	r30, 0x10	; 16
 9da:	be 2e       	mov	r11, r30
 9dc:	b4 fe       	sbrs	r11, 4
 9de:	0d c0       	rjmp	.+26     	; 0x9fa <vfprintf+0x28e>
 9e0:	fb 2d       	mov	r31, r11
 9e2:	f4 60       	ori	r31, 0x04	; 4
 9e4:	bf 2e       	mov	r11, r31
 9e6:	09 c0       	rjmp	.+18     	; 0x9fa <vfprintf+0x28e>
 9e8:	34 fe       	sbrs	r3, 4
 9ea:	0a c0       	rjmp	.+20     	; 0xa00 <vfprintf+0x294>
 9ec:	29 2f       	mov	r18, r25
 9ee:	26 60       	ori	r18, 0x06	; 6
 9f0:	b2 2e       	mov	r11, r18
 9f2:	06 c0       	rjmp	.+12     	; 0xa00 <vfprintf+0x294>
 9f4:	28 e0       	ldi	r18, 0x08	; 8
 9f6:	30 e0       	ldi	r19, 0x00	; 0
 9f8:	05 c0       	rjmp	.+10     	; 0xa04 <vfprintf+0x298>
 9fa:	20 e1       	ldi	r18, 0x10	; 16
 9fc:	30 e0       	ldi	r19, 0x00	; 0
 9fe:	02 c0       	rjmp	.+4      	; 0xa04 <vfprintf+0x298>
 a00:	20 e1       	ldi	r18, 0x10	; 16
 a02:	32 e0       	ldi	r19, 0x02	; 2
 a04:	f8 01       	movw	r30, r16
 a06:	b7 fe       	sbrs	r11, 7
 a08:	07 c0       	rjmp	.+14     	; 0xa18 <vfprintf+0x2ac>
 a0a:	60 81       	ld	r22, Z
 a0c:	71 81       	ldd	r23, Z+1	; 0x01
 a0e:	82 81       	ldd	r24, Z+2	; 0x02
 a10:	93 81       	ldd	r25, Z+3	; 0x03
 a12:	0c 5f       	subi	r16, 0xFC	; 252
 a14:	1f 4f       	sbci	r17, 0xFF	; 255
 a16:	06 c0       	rjmp	.+12     	; 0xa24 <vfprintf+0x2b8>
 a18:	60 81       	ld	r22, Z
 a1a:	71 81       	ldd	r23, Z+1	; 0x01
 a1c:	80 e0       	ldi	r24, 0x00	; 0
 a1e:	90 e0       	ldi	r25, 0x00	; 0
 a20:	0e 5f       	subi	r16, 0xFE	; 254
 a22:	1f 4f       	sbci	r17, 0xFF	; 255
 a24:	a3 01       	movw	r20, r6
 a26:	f1 d0       	rcall	.+482    	; 0xc0a <__ultoa_invert>
 a28:	88 2e       	mov	r8, r24
 a2a:	86 18       	sub	r8, r6
 a2c:	fb 2d       	mov	r31, r11
 a2e:	ff 77       	andi	r31, 0x7F	; 127
 a30:	3f 2e       	mov	r3, r31
 a32:	36 fe       	sbrs	r3, 6
 a34:	0d c0       	rjmp	.+26     	; 0xa50 <vfprintf+0x2e4>
 a36:	23 2d       	mov	r18, r3
 a38:	2e 7f       	andi	r18, 0xFE	; 254
 a3a:	a2 2e       	mov	r10, r18
 a3c:	89 14       	cp	r8, r9
 a3e:	58 f4       	brcc	.+22     	; 0xa56 <vfprintf+0x2ea>
 a40:	34 fe       	sbrs	r3, 4
 a42:	0b c0       	rjmp	.+22     	; 0xa5a <vfprintf+0x2ee>
 a44:	32 fc       	sbrc	r3, 2
 a46:	09 c0       	rjmp	.+18     	; 0xa5a <vfprintf+0x2ee>
 a48:	83 2d       	mov	r24, r3
 a4a:	8e 7e       	andi	r24, 0xEE	; 238
 a4c:	a8 2e       	mov	r10, r24
 a4e:	05 c0       	rjmp	.+10     	; 0xa5a <vfprintf+0x2ee>
 a50:	b8 2c       	mov	r11, r8
 a52:	a3 2c       	mov	r10, r3
 a54:	03 c0       	rjmp	.+6      	; 0xa5c <vfprintf+0x2f0>
 a56:	b8 2c       	mov	r11, r8
 a58:	01 c0       	rjmp	.+2      	; 0xa5c <vfprintf+0x2f0>
 a5a:	b9 2c       	mov	r11, r9
 a5c:	a4 fe       	sbrs	r10, 4
 a5e:	0f c0       	rjmp	.+30     	; 0xa7e <vfprintf+0x312>
 a60:	fe 01       	movw	r30, r28
 a62:	e8 0d       	add	r30, r8
 a64:	f1 1d       	adc	r31, r1
 a66:	80 81       	ld	r24, Z
 a68:	80 33       	cpi	r24, 0x30	; 48
 a6a:	21 f4       	brne	.+8      	; 0xa74 <vfprintf+0x308>
 a6c:	9a 2d       	mov	r25, r10
 a6e:	99 7e       	andi	r25, 0xE9	; 233
 a70:	a9 2e       	mov	r10, r25
 a72:	09 c0       	rjmp	.+18     	; 0xa86 <vfprintf+0x31a>
 a74:	a2 fe       	sbrs	r10, 2
 a76:	06 c0       	rjmp	.+12     	; 0xa84 <vfprintf+0x318>
 a78:	b3 94       	inc	r11
 a7a:	b3 94       	inc	r11
 a7c:	04 c0       	rjmp	.+8      	; 0xa86 <vfprintf+0x31a>
 a7e:	8a 2d       	mov	r24, r10
 a80:	86 78       	andi	r24, 0x86	; 134
 a82:	09 f0       	breq	.+2      	; 0xa86 <vfprintf+0x31a>
 a84:	b3 94       	inc	r11
 a86:	a3 fc       	sbrc	r10, 3
 a88:	10 c0       	rjmp	.+32     	; 0xaaa <vfprintf+0x33e>
 a8a:	a0 fe       	sbrs	r10, 0
 a8c:	06 c0       	rjmp	.+12     	; 0xa9a <vfprintf+0x32e>
 a8e:	b2 14       	cp	r11, r2
 a90:	80 f4       	brcc	.+32     	; 0xab2 <vfprintf+0x346>
 a92:	28 0c       	add	r2, r8
 a94:	92 2c       	mov	r9, r2
 a96:	9b 18       	sub	r9, r11
 a98:	0d c0       	rjmp	.+26     	; 0xab4 <vfprintf+0x348>
 a9a:	b2 14       	cp	r11, r2
 a9c:	58 f4       	brcc	.+22     	; 0xab4 <vfprintf+0x348>
 a9e:	b6 01       	movw	r22, r12
 aa0:	80 e2       	ldi	r24, 0x20	; 32
 aa2:	90 e0       	ldi	r25, 0x00	; 0
 aa4:	76 d0       	rcall	.+236    	; 0xb92 <fputc>
 aa6:	b3 94       	inc	r11
 aa8:	f8 cf       	rjmp	.-16     	; 0xa9a <vfprintf+0x32e>
 aaa:	b2 14       	cp	r11, r2
 aac:	18 f4       	brcc	.+6      	; 0xab4 <vfprintf+0x348>
 aae:	2b 18       	sub	r2, r11
 ab0:	02 c0       	rjmp	.+4      	; 0xab6 <vfprintf+0x34a>
 ab2:	98 2c       	mov	r9, r8
 ab4:	21 2c       	mov	r2, r1
 ab6:	a4 fe       	sbrs	r10, 4
 ab8:	0f c0       	rjmp	.+30     	; 0xad8 <vfprintf+0x36c>
 aba:	b6 01       	movw	r22, r12
 abc:	80 e3       	ldi	r24, 0x30	; 48
 abe:	90 e0       	ldi	r25, 0x00	; 0
 ac0:	68 d0       	rcall	.+208    	; 0xb92 <fputc>
 ac2:	a2 fe       	sbrs	r10, 2
 ac4:	16 c0       	rjmp	.+44     	; 0xaf2 <vfprintf+0x386>
 ac6:	a1 fc       	sbrc	r10, 1
 ac8:	03 c0       	rjmp	.+6      	; 0xad0 <vfprintf+0x364>
 aca:	88 e7       	ldi	r24, 0x78	; 120
 acc:	90 e0       	ldi	r25, 0x00	; 0
 ace:	02 c0       	rjmp	.+4      	; 0xad4 <vfprintf+0x368>
 ad0:	88 e5       	ldi	r24, 0x58	; 88
 ad2:	90 e0       	ldi	r25, 0x00	; 0
 ad4:	b6 01       	movw	r22, r12
 ad6:	0c c0       	rjmp	.+24     	; 0xaf0 <vfprintf+0x384>
 ad8:	8a 2d       	mov	r24, r10
 ada:	86 78       	andi	r24, 0x86	; 134
 adc:	51 f0       	breq	.+20     	; 0xaf2 <vfprintf+0x386>
 ade:	a1 fe       	sbrs	r10, 1
 ae0:	02 c0       	rjmp	.+4      	; 0xae6 <vfprintf+0x37a>
 ae2:	8b e2       	ldi	r24, 0x2B	; 43
 ae4:	01 c0       	rjmp	.+2      	; 0xae8 <vfprintf+0x37c>
 ae6:	80 e2       	ldi	r24, 0x20	; 32
 ae8:	a7 fc       	sbrc	r10, 7
 aea:	8d e2       	ldi	r24, 0x2D	; 45
 aec:	b6 01       	movw	r22, r12
 aee:	90 e0       	ldi	r25, 0x00	; 0
 af0:	50 d0       	rcall	.+160    	; 0xb92 <fputc>
 af2:	89 14       	cp	r8, r9
 af4:	30 f4       	brcc	.+12     	; 0xb02 <vfprintf+0x396>
 af6:	b6 01       	movw	r22, r12
 af8:	80 e3       	ldi	r24, 0x30	; 48
 afa:	90 e0       	ldi	r25, 0x00	; 0
 afc:	4a d0       	rcall	.+148    	; 0xb92 <fputc>
 afe:	9a 94       	dec	r9
 b00:	f8 cf       	rjmp	.-16     	; 0xaf2 <vfprintf+0x386>
 b02:	8a 94       	dec	r8
 b04:	f3 01       	movw	r30, r6
 b06:	e8 0d       	add	r30, r8
 b08:	f1 1d       	adc	r31, r1
 b0a:	80 81       	ld	r24, Z
 b0c:	b6 01       	movw	r22, r12
 b0e:	90 e0       	ldi	r25, 0x00	; 0
 b10:	40 d0       	rcall	.+128    	; 0xb92 <fputc>
 b12:	81 10       	cpse	r8, r1
 b14:	f6 cf       	rjmp	.-20     	; 0xb02 <vfprintf+0x396>
 b16:	22 20       	and	r2, r2
 b18:	09 f4       	brne	.+2      	; 0xb1c <vfprintf+0x3b0>
 b1a:	4e ce       	rjmp	.-868    	; 0x7b8 <vfprintf+0x4c>
 b1c:	b6 01       	movw	r22, r12
 b1e:	80 e2       	ldi	r24, 0x20	; 32
 b20:	90 e0       	ldi	r25, 0x00	; 0
 b22:	37 d0       	rcall	.+110    	; 0xb92 <fputc>
 b24:	2a 94       	dec	r2
 b26:	f7 cf       	rjmp	.-18     	; 0xb16 <vfprintf+0x3aa>
 b28:	f6 01       	movw	r30, r12
 b2a:	86 81       	ldd	r24, Z+6	; 0x06
 b2c:	97 81       	ldd	r25, Z+7	; 0x07
 b2e:	02 c0       	rjmp	.+4      	; 0xb34 <vfprintf+0x3c8>
 b30:	8f ef       	ldi	r24, 0xFF	; 255
 b32:	9f ef       	ldi	r25, 0xFF	; 255
 b34:	2b 96       	adiw	r28, 0x0b	; 11
 b36:	0f b6       	in	r0, 0x3f	; 63
 b38:	f8 94       	cli
 b3a:	de bf       	out	0x3e, r29	; 62
 b3c:	0f be       	out	0x3f, r0	; 63
 b3e:	cd bf       	out	0x3d, r28	; 61
 b40:	df 91       	pop	r29
 b42:	cf 91       	pop	r28
 b44:	1f 91       	pop	r17
 b46:	0f 91       	pop	r16
 b48:	ff 90       	pop	r15
 b4a:	ef 90       	pop	r14
 b4c:	df 90       	pop	r13
 b4e:	cf 90       	pop	r12
 b50:	bf 90       	pop	r11
 b52:	af 90       	pop	r10
 b54:	9f 90       	pop	r9
 b56:	8f 90       	pop	r8
 b58:	7f 90       	pop	r7
 b5a:	6f 90       	pop	r6
 b5c:	5f 90       	pop	r5
 b5e:	4f 90       	pop	r4
 b60:	3f 90       	pop	r3
 b62:	2f 90       	pop	r2
 b64:	08 95       	ret

00000b66 <strnlen_P>:
 b66:	fc 01       	movw	r30, r24
 b68:	05 90       	lpm	r0, Z+
 b6a:	61 50       	subi	r22, 0x01	; 1
 b6c:	70 40       	sbci	r23, 0x00	; 0
 b6e:	01 10       	cpse	r0, r1
 b70:	d8 f7       	brcc	.-10     	; 0xb68 <strnlen_P+0x2>
 b72:	80 95       	com	r24
 b74:	90 95       	com	r25
 b76:	8e 0f       	add	r24, r30
 b78:	9f 1f       	adc	r25, r31
 b7a:	08 95       	ret

00000b7c <strnlen>:
 b7c:	fc 01       	movw	r30, r24
 b7e:	61 50       	subi	r22, 0x01	; 1
 b80:	70 40       	sbci	r23, 0x00	; 0
 b82:	01 90       	ld	r0, Z+
 b84:	01 10       	cpse	r0, r1
 b86:	d8 f7       	brcc	.-10     	; 0xb7e <strnlen+0x2>
 b88:	80 95       	com	r24
 b8a:	90 95       	com	r25
 b8c:	8e 0f       	add	r24, r30
 b8e:	9f 1f       	adc	r25, r31
 b90:	08 95       	ret

00000b92 <fputc>:
 b92:	0f 93       	push	r16
 b94:	1f 93       	push	r17
 b96:	cf 93       	push	r28
 b98:	df 93       	push	r29
 b9a:	fb 01       	movw	r30, r22
 b9c:	23 81       	ldd	r18, Z+3	; 0x03
 b9e:	21 fd       	sbrc	r18, 1
 ba0:	03 c0       	rjmp	.+6      	; 0xba8 <fputc+0x16>
 ba2:	8f ef       	ldi	r24, 0xFF	; 255
 ba4:	9f ef       	ldi	r25, 0xFF	; 255
 ba6:	2c c0       	rjmp	.+88     	; 0xc00 <fputc+0x6e>
 ba8:	22 ff       	sbrs	r18, 2
 baa:	16 c0       	rjmp	.+44     	; 0xbd8 <fputc+0x46>
 bac:	46 81       	ldd	r20, Z+6	; 0x06
 bae:	57 81       	ldd	r21, Z+7	; 0x07
 bb0:	24 81       	ldd	r18, Z+4	; 0x04
 bb2:	35 81       	ldd	r19, Z+5	; 0x05
 bb4:	42 17       	cp	r20, r18
 bb6:	53 07       	cpc	r21, r19
 bb8:	44 f4       	brge	.+16     	; 0xbca <fputc+0x38>
 bba:	a0 81       	ld	r26, Z
 bbc:	b1 81       	ldd	r27, Z+1	; 0x01
 bbe:	9d 01       	movw	r18, r26
 bc0:	2f 5f       	subi	r18, 0xFF	; 255
 bc2:	3f 4f       	sbci	r19, 0xFF	; 255
 bc4:	31 83       	std	Z+1, r19	; 0x01
 bc6:	20 83       	st	Z, r18
 bc8:	8c 93       	st	X, r24
 bca:	26 81       	ldd	r18, Z+6	; 0x06
 bcc:	37 81       	ldd	r19, Z+7	; 0x07
 bce:	2f 5f       	subi	r18, 0xFF	; 255
 bd0:	3f 4f       	sbci	r19, 0xFF	; 255
 bd2:	37 83       	std	Z+7, r19	; 0x07
 bd4:	26 83       	std	Z+6, r18	; 0x06
 bd6:	14 c0       	rjmp	.+40     	; 0xc00 <fputc+0x6e>
 bd8:	8b 01       	movw	r16, r22
 bda:	ec 01       	movw	r28, r24
 bdc:	fb 01       	movw	r30, r22
 bde:	00 84       	ldd	r0, Z+8	; 0x08
 be0:	f1 85       	ldd	r31, Z+9	; 0x09
 be2:	e0 2d       	mov	r30, r0
 be4:	19 95       	eicall
 be6:	89 2b       	or	r24, r25
 be8:	e1 f6       	brne	.-72     	; 0xba2 <fputc+0x10>
 bea:	d8 01       	movw	r26, r16
 bec:	16 96       	adiw	r26, 0x06	; 6
 bee:	8d 91       	ld	r24, X+
 bf0:	9c 91       	ld	r25, X
 bf2:	17 97       	sbiw	r26, 0x07	; 7
 bf4:	01 96       	adiw	r24, 0x01	; 1
 bf6:	17 96       	adiw	r26, 0x07	; 7
 bf8:	9c 93       	st	X, r25
 bfa:	8e 93       	st	-X, r24
 bfc:	16 97       	sbiw	r26, 0x06	; 6
 bfe:	ce 01       	movw	r24, r28
 c00:	df 91       	pop	r29
 c02:	cf 91       	pop	r28
 c04:	1f 91       	pop	r17
 c06:	0f 91       	pop	r16
 c08:	08 95       	ret

00000c0a <__ultoa_invert>:
 c0a:	fa 01       	movw	r30, r20
 c0c:	aa 27       	eor	r26, r26
 c0e:	28 30       	cpi	r18, 0x08	; 8
 c10:	51 f1       	breq	.+84     	; 0xc66 <__ultoa_invert+0x5c>
 c12:	20 31       	cpi	r18, 0x10	; 16
 c14:	81 f1       	breq	.+96     	; 0xc76 <__ultoa_invert+0x6c>
 c16:	e8 94       	clt
 c18:	6f 93       	push	r22
 c1a:	6e 7f       	andi	r22, 0xFE	; 254
 c1c:	6e 5f       	subi	r22, 0xFE	; 254
 c1e:	7f 4f       	sbci	r23, 0xFF	; 255
 c20:	8f 4f       	sbci	r24, 0xFF	; 255
 c22:	9f 4f       	sbci	r25, 0xFF	; 255
 c24:	af 4f       	sbci	r26, 0xFF	; 255
 c26:	b1 e0       	ldi	r27, 0x01	; 1
 c28:	3e d0       	rcall	.+124    	; 0xca6 <__ultoa_invert+0x9c>
 c2a:	b4 e0       	ldi	r27, 0x04	; 4
 c2c:	3c d0       	rcall	.+120    	; 0xca6 <__ultoa_invert+0x9c>
 c2e:	67 0f       	add	r22, r23
 c30:	78 1f       	adc	r23, r24
 c32:	89 1f       	adc	r24, r25
 c34:	9a 1f       	adc	r25, r26
 c36:	a1 1d       	adc	r26, r1
 c38:	68 0f       	add	r22, r24
 c3a:	79 1f       	adc	r23, r25
 c3c:	8a 1f       	adc	r24, r26
 c3e:	91 1d       	adc	r25, r1
 c40:	a1 1d       	adc	r26, r1
 c42:	6a 0f       	add	r22, r26
 c44:	71 1d       	adc	r23, r1
 c46:	81 1d       	adc	r24, r1
 c48:	91 1d       	adc	r25, r1
 c4a:	a1 1d       	adc	r26, r1
 c4c:	20 d0       	rcall	.+64     	; 0xc8e <__ultoa_invert+0x84>
 c4e:	09 f4       	brne	.+2      	; 0xc52 <__ultoa_invert+0x48>
 c50:	68 94       	set
 c52:	3f 91       	pop	r19
 c54:	2a e0       	ldi	r18, 0x0A	; 10
 c56:	26 9f       	mul	r18, r22
 c58:	11 24       	eor	r1, r1
 c5a:	30 19       	sub	r19, r0
 c5c:	30 5d       	subi	r19, 0xD0	; 208
 c5e:	31 93       	st	Z+, r19
 c60:	de f6       	brtc	.-74     	; 0xc18 <__ultoa_invert+0xe>
 c62:	cf 01       	movw	r24, r30
 c64:	08 95       	ret
 c66:	46 2f       	mov	r20, r22
 c68:	47 70       	andi	r20, 0x07	; 7
 c6a:	40 5d       	subi	r20, 0xD0	; 208
 c6c:	41 93       	st	Z+, r20
 c6e:	b3 e0       	ldi	r27, 0x03	; 3
 c70:	0f d0       	rcall	.+30     	; 0xc90 <__ultoa_invert+0x86>
 c72:	c9 f7       	brne	.-14     	; 0xc66 <__ultoa_invert+0x5c>
 c74:	f6 cf       	rjmp	.-20     	; 0xc62 <__ultoa_invert+0x58>
 c76:	46 2f       	mov	r20, r22
 c78:	4f 70       	andi	r20, 0x0F	; 15
 c7a:	40 5d       	subi	r20, 0xD0	; 208
 c7c:	4a 33       	cpi	r20, 0x3A	; 58
 c7e:	18 f0       	brcs	.+6      	; 0xc86 <__ultoa_invert+0x7c>
 c80:	49 5d       	subi	r20, 0xD9	; 217
 c82:	31 fd       	sbrc	r19, 1
 c84:	40 52       	subi	r20, 0x20	; 32
 c86:	41 93       	st	Z+, r20
 c88:	02 d0       	rcall	.+4      	; 0xc8e <__ultoa_invert+0x84>
 c8a:	a9 f7       	brne	.-22     	; 0xc76 <__ultoa_invert+0x6c>
 c8c:	ea cf       	rjmp	.-44     	; 0xc62 <__ultoa_invert+0x58>
 c8e:	b4 e0       	ldi	r27, 0x04	; 4
 c90:	a6 95       	lsr	r26
 c92:	97 95       	ror	r25
 c94:	87 95       	ror	r24
 c96:	77 95       	ror	r23
 c98:	67 95       	ror	r22
 c9a:	ba 95       	dec	r27
 c9c:	c9 f7       	brne	.-14     	; 0xc90 <__ultoa_invert+0x86>
 c9e:	00 97       	sbiw	r24, 0x00	; 0
 ca0:	61 05       	cpc	r22, r1
 ca2:	71 05       	cpc	r23, r1
 ca4:	08 95       	ret
 ca6:	9b 01       	movw	r18, r22
 ca8:	ac 01       	movw	r20, r24
 caa:	0a 2e       	mov	r0, r26
 cac:	06 94       	lsr	r0
 cae:	57 95       	ror	r21
 cb0:	47 95       	ror	r20
 cb2:	37 95       	ror	r19
 cb4:	27 95       	ror	r18
 cb6:	ba 95       	dec	r27
 cb8:	c9 f7       	brne	.-14     	; 0xcac <__ultoa_invert+0xa2>
 cba:	62 0f       	add	r22, r18
 cbc:	73 1f       	adc	r23, r19
 cbe:	84 1f       	adc	r24, r20
 cc0:	95 1f       	adc	r25, r21
 cc2:	a0 1d       	adc	r26, r0
 cc4:	08 95       	ret

00000cc6 <_exit>:
 cc6:	f8 94       	cli

00000cc8 <__stop_program>:
 cc8:	ff cf       	rjmp	.-2      	; 0xcc8 <__stop_program>
